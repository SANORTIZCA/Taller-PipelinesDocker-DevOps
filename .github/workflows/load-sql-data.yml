name: Load SQL Data into PostgreSQL

on:
  workflow_dispatch:  # Ejecución manual
  push:
    branches: [ "main" ]  # O disparar automáticamente al hacer push

jobs:
  load-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy SQL files to EC2
        run: |
          scp -i ~/.ssh/ec2_key.pem \
              -o StrictHostKeyChecking=no \
              ./sql/*.sql \
              ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/

      - name: Execute SQL files in PostgreSQL
        run: |
          ssh -i ~/.ssh/ec2_key.pem \
              -o StrictHostKeyChecking=no \
              ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Copiar CADA archivo SQL al contenedor (uno por uno)
          for sql_file in /tmp/*.sql; do
            docker cp "$sql_file" postgresql-dev:/tmp/
          done

          # Ejecutar CADA archivo SQL en PostgreSQL
          for sql_file in /tmp/*.sql; do
            docker exec postgresql-dev \
              psql -U ${{ secrets.POSTGRES_USER }} \
                  -d ${{ secrets.POSTGRES_DB }} \
                  -f "/tmp/$(basename "$sql_file")"
          done

          # Limpieza
          rm -f /tmp/*.sql
          docker exec postgresql-dev sh -c "rm -f /tmp/*.sql"
          EOF

      - name: Cleanup SSH Key
        run: rm -f ~/.ssh/ec2_key.pem